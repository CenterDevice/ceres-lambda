language: rust
env:
  global:
  - FUNCTIONS="aws-watchtower"
matrix:
  fast_finish: true
  include:
  - env: TARGET=x86_64-unknown-linux-gnu
    rust: 1.31.0
    services:
    - docker
  - env: TARGET=x86_64-apple-darwin
    rust: 1.31.0
    os: osx
  - env: TARGET=x86_64-unknown-linux-gnu CODECOV=1 RUSTFLAGS="-C link-dead-code"
    rust: stable
    services:
    - docker
    addons:
      apt:
        packages:
        - libcurl4-openssl-dev
        - libelf-dev
        - libdw-dev
        - cmake
        - gcc
        - binutils-dev
        - libiberty-dev
  - env: TARGET=x86_64-apple-darwin
    rust: stable
    os: osx
  - env: TARGET=x86_64-unknown-linux-gnu
    rust: beta
    services:
    - docker
  - env: TARGET=x86_64-unknown-linux-gnu
    rust: nightly
    services:
    - docker
  allow_failures:
  - rust: beta
  - rust: nightly
sudo: required
before_install: |
  if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    echo "+++ Preparing Docker"
    BASE_DIR=$(pwd)
    docker --version
    docker pull ekidd/rust-musl-builder:$TRAVIS_RUST_VERSION
    docker run --rm -it -v "$BASE_DIR/.cargo.cache/git":/home/rust/.cargo/git -v "$BASE_DIR/.cargo.cache/registry":/home/rust/.cargo/registry ekidd/rust-musl-builder:$TRAVIS_RUST_VERSION sudo chown -R rust:rust /home/rust/.cargo/git
    docker run --rm -it -v "$BASE_DIR/.cargo.cache/git":/home/rust/.cargo/git -v "$BASE_DIR/.cargo.cache/registry":/home/rust/.cargo/registry ekidd/rust-musl-builder:$TRAVIS_RUST_VERSION sudo chown -R rust:rust /home/rust/.cargo/registry
    echo "+++ Preparing Docker: done."
  fi
script: |
  echo "+++ Building with $TRAVIS_RUST_VERSION"
  cargo test --verbose --all
  echo "+++ Building with $TRAVIS_RUST_VERSION: done."
  if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    echo "+++ Building static musl versions with $TRAVIS_RUST_VERSION" &&
    docker run --rm -it -v "$(pwd)":/home/rust/src -v "$BASE_DIR/.cargo.cache/git":/home/rust/.cargo/git -v "$BASE_DIR/.cargo.cache/registry":/home/rust/.cargo/registry ekidd/rust-musl-builder:$TRAVIS_RUST_VERSION sudo chown -R rust:rust /home/rust/src/target &&
    docker run --rm -it -v "$(pwd)":/home/rust/src -v "$BASE_DIR/.cargo.cache/git":/home/rust/.cargo/git -v "$BASE_DIR/.cargo.cache/registry":/home/rust/.cargo/registry ekidd/rust-musl-builder:$TRAVIS_RUST_VERSION cargo test --verbose --all &&
    echo "+++ Building static musl version with $TRAVIS_RUST_VERSION: done."
  fi
after_success: |
  if [[ "$TRAVIS_OS_NAME" == "linux" && "$CODECOV" ]]; then
    echo "+++ Checking code coverage" &&
    wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
    tar xzf master.tar.gz &&
    cd kcov-master &&
    mkdir build &&
    cd build &&
    cmake .. &&
    make &&
    make install DESTDIR=../../kcov-build &&
    cd ../.. &&
    rm -rf kcov-master &&
    for function in $FUNCTIONS; do
      for file in target/debug/$(echo ${function} | sed '-' '_')-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done
    done &&
    bash <(curl -s https://codecov.io/bash) &&
    echo "Uploaded code coverage." &&
    echo "+++ Checking code coverage: done."
  fi

